name: Test Juno CLI runs from Docker images

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: [ Dockerfile.slim, Dockerfile.full ]
    steps:
      # Action: https://github.com/actions/checkout/releases/tag/v4.2.2
      - name: Check out the repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # Action: https://github.com/docker/setup-buildx-action/releases/tag/v3.10.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2

      # Action: https://github.com/docker/build-push-action/releases/tag/v6.18.0
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          load: true
          tags: juno-action:test-${{ matrix.dockerfile == 'Dockerfile.full' && 'full' || 'slim' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Juno CLI version
        run: |
          OUTPUT=$(docker run --rm -e JUNO_TOKEN="${{ secrets.JUNO_TOKEN }}" juno-action:test-${{ matrix.dockerfile == 'Dockerfile.full' && 'full' || 'slim' }} version --cli)
          echo "$OUTPUT"
          if [[ "$OUTPUT" != *"v0.4.0"* ]]; then
            echo "‚ùå Expected version v0.4.0 not found in output"
            exit 1
          fi
        shell: bash
